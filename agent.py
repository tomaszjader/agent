import os
import asyncio

try:
    from dotenv import load_dotenv, find_dotenv
    load_dotenv(find_dotenv())
except ImportError:
    pass

from google.adk.agents import Agent
from google.adk.runners import Runner
from google.adk.sessions import InMemorySessionService
from google.adk.tools import google_search
from google.genai import types as genai_types

from tools.tell_time import tell_time
from tools.create_note import create_note
from tools.sum_numbers import sum_numbers
from tools.prepare_instagram_post import propose_caption
from tools.publish_instagram_post import publish_post

# ---- Konfiguracja ----
GOOGLE_MODEL = os.environ.get("GOOGLE_MODEL", "gemini-pro")
APP_NAME = os.environ.get("ADK_APP_NAME", "adk-agent-py")
BASE_DIR = os.path.dirname(__file__)

# ---- Globalne instancje ----
session_service = InMemorySessionService()
created_sessions = set()

agent = Agent(
    name="adk_agent",
    model=GOOGLE_MODEL,
    tools=[tell_time, create_note, sum_numbers, google_search, propose_caption, publish_post],
    instruction="""ğŸ§  Agent Tomek â€” TwÃ³j asystent do postÃ³w i zadaÅ„

Opis:
JesteÅ› agentem Tomkiem, ktÃ³rego zadaniem jest pomaganie uÅ¼ytkownikowi w:

tworzeniu i publikowaniu postÃ³w na Instagramie,

sumowaniu liczb,

wyszukiwaniu informacji w internecie,

tworzeniu notatek w Google Keep,

oraz udzielaniu informacji o czasie.

Twoim gÅ‚Ã³wnym celem jest wsparcie uÅ¼ytkownika w przygotowaniu i publikacji posta na Instagramie.



ğŸªœ Procedura publikacji posta

Propozycja opisu:
UÅ¼yj narzÄ™dzia propose_caption, aby wygenerowaÄ‡ propozycjÄ™ opisu posta.

Akceptacja lub edycja:
Zapytaj uÅ¼ytkownika, czy akceptuje zaproponowany opis.

JeÅ›li chce wprowadziÄ‡ zmiany, przeanalizuj jego uwagi i wygeneruj nowÄ… propozycjÄ™.

Oczekiwanie na zdjÄ™cie:
Po zaakceptowaniu ostatecznego opisu poproÅ› uÅ¼ytkownika o przesÅ‚anie zdjÄ™cia.
Poinformuj go, Å¼e czekasz na plik.

Potwierdzenie publikacji:
Po otrzymaniu zdjÄ™cia (z podanÄ… Å›cieÅ¼kÄ… pliku) przedstaw podsumowanie:

treÅ›Ä‡ opisu,

informacjÄ™ o zaÅ‚Ä…czonym zdjÄ™ciu.
Zapytaj uÅ¼ytkownika o ostateczne potwierdzenie publikacji.

Publikacja:
Dopiero po otrzymaniu potwierdzenia uÅ¼yj narzÄ™dzia publish_post,
przekazujÄ…c Å›cieÅ¼kÄ™ do zdjÄ™cia i zatwierdzony opis.

Anulowanie:
JeÅ›li uÅ¼ytkownik w dowolnym momencie zrezygnuje â€” anuluj proces.

ğŸ”§ Dodatkowe funkcje

Wyszukiwanie w internecie: jeÅ›li uÅ¼ytkownik poprosi o znalezienie informacji â€” uÅ¼yj google_search.

Tworzenie notatek w Google Keep: jeÅ›li uÅ¼ytkownik poprosi o stworzenie notatki â€” uÅ¼yj create_note. PamiÄ™taj, aby poprosiÄ‡ o tytuÅ‚ i treÅ›Ä‡ notatki.

Podawanie czasu: jeÅ›li uÅ¼ytkownik zapyta o aktualny czas â€” uÅ¼yj tell_time.

Sumowanie liczb: jeÅ›li uÅ¼ytkownik poprosi o obliczenia â€” wykonaj odpowiednie dziaÅ‚ania matematyczne.
"""
)
runner = Runner(agent=agent, app_name=APP_NAME, session_service=session_service)

# ---- GÅ‚Ã³wna logika agenta ADK ----

def ensure_google_api_key() -> None:
    """Sprawdza, czy klucz API Google jest ustawiony."""
    if not os.environ.get("GOOGLE_API_KEY"):
        raise RuntimeError("Brak zmiennej Å›rodowiskowej GOOGLE_API_KEY. Ustaw klucz i sprÃ³buj ponownie.")

async def run_adk_async(session_id: str, instruction: str) -> str:
    """Asynchronicznie uruchamia agenta ADK z zadanÄ… instrukcjÄ…."""
    ensure_google_api_key()

    # UÅ¼ycie globalnych instancji i rÄ™czne zarzÄ…dzanie sesjÄ…
    if session_id not in created_sessions:
        await session_service.create_session(app_name=APP_NAME, user_id="user-default", session_id=session_id)
        created_sessions.add(session_id)

    content = genai_types.Content(role="user", parts=[genai_types.Part(text=instruction)])
    events = runner.run_async(user_id="user-default", session_id=session_id, new_message=content)

    final_response = "Agent zakoÅ„czyÅ‚ pracÄ™, ale nie wygenerowaÅ‚ odpowiedzi."
    async for event in events:
        if event.is_final_response():
            try:
                final_response = event.content.parts[0].text
            except (AttributeError, IndexError):
                final_response = "Otrzymano pustÄ… odpowiedÅº od agenta."
            break
    
    return final_response.strip()